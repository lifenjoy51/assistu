<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="com.assistu.dic"
		annotation-config="true" />

	<!-- MyBatis 관련 설정 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Mapper 설정 -->
	<bean id="hanjaBasicMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.assistu.dic.pst.HanjaBasicMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="hanjaWordMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.assistu.dic.pst.HanjaWordMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="hanjaDiffMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.assistu.dic.pst.HanjaDiffMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	
	<!-- XStream jsonMarshaller -->
	<bean id="jsonMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="streamDriver" ref="jsonStreamDriver" />
		<property name="autodetectAnnotations" value="true" />
	</bean>
	<bean id="jsonStreamDriver"
		class="com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver" />
	<!-- jsonView -->
	<bean id="jsonView" name="jsonView"
		class="org.springframework.web.servlet.view.xml.MarshallingView">
		<property name="marshaller" ref="jsonMarshaller" /> <!-- 마샬러 지정 -->
		<property name="contentType" value="application/json;charset=UTF-8" />
		<property name="modelKey" value="jsonData" />
	</bean>
	<bean id="beanNameResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	

</beans>
